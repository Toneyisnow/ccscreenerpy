from ccdata import *
import math
import copy
import pandas as pd
import numpy as np
import datetime
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import talib

# Candidates: BTC, ETH, USDT, LTC

coin_ids = ["BTC", "ETH", "USDT", "LTC", "XRP", "ZEC"]

btc_price = get_one("BTC","D","close")
btc_price = btc_price[-766:]
btc_ppo = talib.PPO(btc_price, fastperiod=15, slowperiod=30, matype=0)

eth_price=get_one("ETH","D","close")
eth_price = eth_price[-766:]
eth_ppo = talib.PPO(eth_price, fastperiod=15, slowperiod=30, matype=0)

usdt_price=get_one("USDT","D","close")
usdt_price = usdt_price[-766:]
usdt_ppo = talib.PPO(usdt_price, fastperiod=15, slowperiod=30, matype=0)

ltc_price=get_one("LTC","D","close")
ltc_price = ltc_price[-766:]
ltc_ppo = talib.PPO(ltc_price, fastperiod=15, slowperiod=30, matype=0)

xrp_price=get_one("XRP","D","close")
xrp_price = xrp_price[-766:]
xrp_ppo = talib.PPO(xrp_price, fastperiod=15, slowperiod=30, matype=0)

zec_price=get_one("ZEC","D","close")
zec_price = zec_price[-766:]
zec_ppo = talib.PPO(zec_price, fastperiod=15, slowperiod=30, matype=0)



combined_prices = np.column_stack((btc_price, eth_price, usdt_price, ltc_price, xrp_price, zec_price))
combined_prices


combined_ppo = np.column_stack((btc_ppo, eth_ppo, usdt_ppo, ltc_ppo, xrp_ppo, zec_ppo))
combined_ppo

balance = 100000
holding_coin_index = -1
holding_coin_amount = 0

for dindex in range(len(combined_prices)):
    print("Date " + str(dindex))
    cur_ppo = combined_ppo[dindex]
    #selected_coin_index = max(xrange(len(cur_ppo)), key=cur_ppo.__getitem__)
    selected_coin_index = np.argmax(cur_ppo)
    if (holding_coin_index != selected_coin_index):
        if (holding_coin_index >= 0):
            # Sell the current holding coin with today's price
            balance = holding_coin_amount * combined_prices[dindex][holding_coin_index]
            print("Selling " + coin_ids[holding_coin_index] + " with Amount " + str(holding_coin_amount) + " and price " + str(combined_prices[dindex][holding_coin_index]) )
            print("Balance: " + str(balance))
        # Buy the new coin
        holding_coin_index = selected_coin_index
        holding_coin_amount = balance / combined_prices[dindex][selected_coin_index]
        balance = 0
        print("Buying " + coin_ids[selected_coin_index] + " with Amount " + str(holding_coin_amount) + " and price " + str(combined_prices[dindex][selected_coin_index]) )
        
print("Coin Index:" + str(holding_coin_index) + ", Amount:" + str(holding_coin_amount) + ", Total Balance:" + str(combined_prices[len(combined_prices)-1][holding_coin_index] * holding_coin_amount))

